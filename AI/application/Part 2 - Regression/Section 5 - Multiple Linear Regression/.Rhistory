print('Hello World!')
y_pred = predict(regressor, x_test)
library(caTools)
data = read.csv('50_Startups.csv')
data$State = factor(data$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
set.seed(123)
split = sample.split(data$Profit, SplitRatio = 0.8)
training_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
# The `.` following the `~` refers to all other columns; this is a shortcut for the
# following:
# Profit ~ R.D.Spend + Administration + Marketing.Spend + State
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, x_test)
y_pred = predict(regressor, newdata = x_test)
library(caTools)
data = read.csv('50_Startups.csv')
data$State = factor(data$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
set.seed(123)
split = sample.split(data$Profit, SplitRatio = 0.8)
training_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
# The `.` following the `~` refers to all other columns; this is a shortcut for the
# following:
# Profit ~ R.D.Spend + Administration + Marketing.Spend + State
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, newdata = x_test)
library(caTools)
data = read.csv('50_Startups.csv')
setwd("~/Programming/AI/application/Part 2 - Regression/Section 5 - Multiple Linear Regression")
library(caTools)
data = read.csv('50_Startups.csv')
data$State = factor(data$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
set.seed(123)
split = sample.split(data$Profit, SplitRatio = 0.8)
training_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
# The `.` following the `~` refers to all other columns; this is a shortcut for the
# following:
# Profit ~ R.D.Spend + Administration + Marketing.Spend + State
regressor = lm(formula = Profit ~ .,
data = training_set)
y_pred = predict(regressor, newdata = x_test)
y_pred = predict(regressor, newdata = test_set)
??summary
summary(regressor)
sum = summary(regressor)
sum$residuals
sum$fstatistic
anova(regressor)
sum = anova(regressor)
sum$`Pr(>F)`
sum$`Pr(>F)`[0]
sum$`Pr(>F)`[1]
p_vals = anova(regressor)$`Pr(>F)`
p_vals
print
for (p_val in p_vals) print(p_val)
print(p_val)
for (p_val in p_vals)
print(p_val)
